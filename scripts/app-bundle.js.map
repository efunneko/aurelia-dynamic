{"version":3,"sources":["app.js","data-manager.js","environment.js","footer.js","group-view.js","header.js","home.js","main.js","page-view.js","question-view.js","scoreboard.js","survey-data.js","header/achievements.js","header/score.js","models/answer.js","models/group.js","models/page.js","models/question.js","models/survey.js","question-widgets/checkbox-grid-widget.js","question-widgets/checkbox-widget.js","question-widgets/number-grid-widget.js","question-widgets/number-widget.js","question-widgets/radio-widget.js","question-widgets/select-widget.js","question-widgets/text-widget.js","resources/index.js"],"names":["App","placeholder","configureRouter","config","router","title","map","route","redirect","name","moduleId","mapUnknownRoutes","DataManager","httpClient","survey","configure","useStandardConfiguration","withBaseUrl","contactsUrl","decomposeAchievementRequirement","achievement","reqList","req","question","questionIndex","console","log","matches","type","match","column","rows","row","columns","push","value","achievementIndex","processSurvey","pages","page","processSurveyGroup","group","achievements","tempReq","requirements","items","item","getSurvey","Promise","resolve","reject","fromObject","debug","testing","Footer","message","age","submit","GroupView","activate","Header","scoreboard","totalScore","notifications","achievementNotifications","Home","dataManager","pageIdx","params","pageNum","then","getNext","getPrev","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","feature","developmentLogging","start","setRoot","QuestionView","ScoreBoard","answers","numAchievements","answerQuestion","answer","ansObj","lastTotal","score","lastDelta","addScoreChangeNotification","checkAchievements","getAnswer","questionName","allReqsMet","requirement","met","doesPassAchievementRequirement","scoreDelta","addAchievementChangeNotification","amount","notification","toString","setTimeout","splice","description","level","backSymbol","border","scoreType","scoreData","upTo","scale","options","Achievements","SelectWidget","obj","val","Answer","src","Object","assign","computeScore","lastUpTo","entry","numToAdd","Group","tmpItems","Page","Question","learnAnswer","Survey","CheckboxGrid","checkboxes","cb","col","CheckboxWidget","Element","element","valueChanged","newVal","oldVal","boxClick","checkbox","attached","self","addEventListener","e","detached","removeEventListener","NumberGrid","numbers","num","newEntry","isNavigationOrSelectionKey","indexOf","keyCode","ctrlKey","metaKey","keydown","shiftKey","preventDefault","addOne","subtractOne","allowNegative","RadioWidget","selected","radioClick","radioButton","index","elements","getElementsByClassName","i","el","length","undefined","TextWidget"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.placeholder = \"App placeholder\";\n  }\n  \n  configureRouter(config, router) {\n  \tthis.router = router;\n  \tconfig.title = \"Fun With Aurelia\";\n  \tconfig.map([\n      { route: '', redirect: 'home/page/1' },\n      { route: 'home', redirect: 'home/page/1' },\n      { route: 'home/page', redirect: 'home/page/1' },\n      { route: 'home/page/:pageNum', name: 'home', moduleId: 'home' },\n  \t]);\n    config.mapUnknownRoutes('not-found');\n  }\n}\n","import {inject} from 'aurelia-framework'; \nimport {HttpClient, json} from 'aurelia-fetch-client'; \nimport {Survey} from './models/survey'; \nimport environment from './environment'; \nimport surveyData from './survey-data'; \n \n@inject(HttpClient) \nexport class DataManager { \n\n  survey = null;\n  \n  constructor(httpClient) { \n    this.httpClient = httpClient.configure(config => { \n      config \n        .useStandardConfiguration() \n        .withBaseUrl(environment.contactsUrl); \n    }); \n  }\n\n  decomposeAchievementRequirement(achievement, reqList, req) {\n\n    let question = this.survey.questionIndex[req.name];\n\n    if (!question) {\n      console.log(\"Achievement requirement name error: \", req.name);\n      return;\n    }\n\n    let matches = req.type.match(/^grid-column-(.*)/);\n    if (matches) {\n      let column = req.column || 0;\n      let type = matches[1];\n      \n      for (let row of question.rows) {\n        let name = `${question.name}.${row.name}.${question.columns[column].name}`;\n        reqList.push({\n          name: name,\n          type: type,\n          value: req.value\n        });\n\n        if (!this.survey.achievementIndex[name]) {\n          this.survey.achievementIndex[name] = [];\n        }\n        this.survey.achievementIndex[name].push(achievement);\n        \n      }\n      \n    }\n    \n  }\n\n  processSurvey() {\n\n    // Make an efficient lookup to get to questions by name\n    this.survey.questionIndex = {};\n    for (let page of this.survey.pages) {\n      this.processSurveyGroup(page.group);\n    }\n    \n    // Make an efficient lookup table for achievements\n    this.survey.achievementIndex = {};\n    if (this.survey.achievements) {\n      for (let achievement of this.survey.achievements) {\n        let tempReq = achievement.requirements;\n        achievement.requirements = [];\n        for (let req of tempReq) {\n          if (!this.survey.achievementIndex[req.name]) {\n            this.survey.achievementIndex[req.name] = [];\n          }\n\n          // If this is a compound requirement type, decompose it\n          if (req.type.match(/^grid/)) {\n            this.decomposeAchievementRequirement(achievement, achievement.requirements, req);\n          }\n          else {\n            achievement.requirements.push(req);\n            this.survey.achievementIndex[req.name].push(achievement);\n          }\n        }\n      }\n    }\n    \n  }\n\n  processSurveyGroup(group) {\n\n    for (let item of group.items) {\n      if (item.type === \"group\") {\n        this.processSurveyGroup(item);\n      }\n      else {\n        this.survey.questionIndex[item.name] = item;\n      }\n    }\n\n  }\n \n  getSurvey() {\n    // Return a promise. It is possible that this would turn into\n    // an async request eventually\n    return new Promise(\n      (resolve, reject) => {\n        if (!this.survey) {\n          this.survey = Survey.fromObject(surveyData);\n          this.processSurvey();\n        }\n        resolve(this.survey); // success\n      });\n  }\n \n} \n","export default {\n  debug: true,\n  testing: true\n};\n","export class Footer {\n  constructor() {\n    this.message = \"This is the footer\";\n    this.name = \"\";\n    this.age  = \"\";\n  }\n\n  submit() {\n    console.log(\"Got:\", this.name, this.age);\n    this.name = \"It's me\";\n  }\n}\n","export class GroupView {\n\n  group = null;\n  \n  activate(group) {\n    this.group = group;\n  }\n  \n};\n","import {inject, computedFrom} from 'aurelia-framework';\nimport { ScoreBoard } from \"./scoreboard\";\n\n@inject(ScoreBoard)\nexport class Header {\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n    this.message = \"This is the header\";\n  }\n\n  @computedFrom('scoreboard.totalScore')\n  get score() {\n    return this.scoreboard.totalScore;\n  }\n\n  @computedFrom('scoreboard.notifications')\n  get scoreNotifications() {\n    return this.scoreboard.notifications;\n  }\n\n  @computedFrom('scoreboard.achievementNotifications')\n  get achievementNotifications() {\n    console.log(\"Getting achievements\");\n    return this.scoreboard.achievementNotifications;\n  }\n    \n}\n","import {inject} from 'aurelia-framework'; \nimport {DataManager} from './data-manager'; \nimport {Router} from 'aurelia-router'; \n\n@inject(DataManager, Router) \nexport class Home {\n\n  pageIdx = 0;\n  survey = null;\n  \n  constructor(dataManager, router) {\n    this.dataManager = dataManager;\n    this.router      = router;\n  }\n\n  activate(params) {\n    if (params.pageNum && params.pageNum > 1) {\n      this.pageIdx = params.pageNum - 1;\n    }\n    else {\n      this.pageIdx = 0;\n    }\n\n    return this.dataManager.getSurvey() \n      .then(survey => {\n        this.survey = survey;\n        console.log(\"Survey:\", survey);\n      });    \n  }\n\n  getNext() {\n    \n  }\n\n  getPrev() {\n\n  }\n  \n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-animator-css')\n    .plugin('aurelia-bootstrap')\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework'; \nimport {Page} from './models/page';\n\nexport class Home {\n\n  page = null;\n  \n  constructor() {\n  }\n\n  activate(page) {\n    console.log(\"Page:\", page);\n    this.page = page;\n  }\n  \n};\n","export class QuestionView {\n  question = null;\n  activate(question) {\n    this.question = question;\n  }\n};\n","import {Answer} from \"./models/answer\";\nimport {inject} from 'aurelia-framework';\nimport {DataManager} from './data-manager'; \n\n@inject(DataManager)\nexport class ScoreBoard {\n  answers = {};\n  achievements = {};\n  notifications = [];\n  achievementNotifications = [];\n  totalScore = 0;\n  numAchievements = 0;\n\n  constructor(dataManager) {\n    this.dataManager = dataManager;\n    this.dataManager.getSurvey()\n      .then(survey => {\n        this.survey = survey;\n      });    \n  }\n  \n  answerQuestion(answer) {\n    let ansObj    = Answer.fromObject(answer);\n    let lastTotal = this.totalScore;\n\n    // Remove the previous answer from the total score\n    if (this.answers[ansObj.name] &&\n        this.answers[ansObj.name].score) {\n      this.totalScore -= this.answers[ansObj.name].score;\n    }\n\n    // Add this answer to the total score\n    this.totalScore += ansObj.score;\n    this.answers[ansObj.name] = ansObj;\n\n    // If the score has changed, notify the user\n    let lastDelta = this.totalScore - lastTotal;\n    if (lastDelta != 0) {\n      this.addScoreChangeNotification(lastDelta);\n    }\n\n    this.checkAchievements(ansObj);\n    \n  }\n\n  getAnswer(questionName) {\n    return this.answers[questionName];\n  }\n\n  checkAchievements(answer) {\n\n    if (!this.survey) {\n      return;\n    }\n    \n    if (this.survey.achievementIndex[answer.name]) {\n\n      // This question feeds into at least one achievement\n      for (let achievement of this.survey.achievementIndex[answer.name]) {\n        let allReqsMet = true;\n        for (let requirement of achievement.requirements) {\n          if (answer.name === requirement.name) {\n            requirement.met = this.doesPassAchievementRequirement(answer, requirement);\n          }\n          if (!requirement.met) {\n            allReqsMet = false;\n          }\n        }\n\n        let scoreDelta = 0;\n        if (!this.achievements[achievement.name] && allReqsMet) {\n          // New achievement met\n          console.log(\"Got achievement: \", achievement.name);\n          scoreDelta = achievement.score;\n          this.addAchievementChangeNotification(achievement);\n          this.numAchievements++;\n        }\n        else if (this.achievements[achievement.name] && !allReqsMet) {\n          // Existing achievement lost\n          console.log(\"Lost achievement: \", achievement.name);\n          scoreDelta = -achievement.score;\n          this.numAchievements--;\n        }\n        this.achievements[achievement.name] = allReqsMet;\n\n        if (scoreDelta) {\n          this.totalScore += scoreDelta;\n          this.addScoreChangeNotification(scoreDelta);\n        }\n        \n      }\n      \n    }\n    \n  }\n\n  doesPassAchievementRequirement(answer, requirement) {\n    if (requirement.type === \"greater-than\"){\n      if (answer.score > requirement.value) {\n        return true;\n      }\n      return false;\n    }\n    else if (requirement.type === \"less-than\"){\n      if (answer.score < requirement.value) {\n        return true;\n      }\n      return false;\n    }\n    else if (requirement.type === \"equal\"){\n      if (answer.score === requirement.value) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }\n\n  addScoreChangeNotification(amount) {\n    let notification = amount < 0 ? amount.toString() : \"+\" + amount.toString();\n    this.notifications.push(notification);\n    setTimeout(() => { \n      this.notifications.splice(0, 1);\n    }, 2500);\n    console.log(this.notifications);\n  }\n  \n  addAchievementChangeNotification(achievement) {\n    let notification = `New achievement: ${achievement.name}`;\n    this.achievementNotifications.push(notification);\n    setTimeout(() => { \n      this.achievementNotifications.splice(0, 1);\n    }, 2500);\n    console.log(this.notifications);\n  }\n  \n  \n}\n","\nexport default {\n  name: \"This is a test survey\",\n  description: \"Ask about this and that\",\n  achievements: [\n    {\n      name: \"Test 1\",\n      score: 5,\n      level: \"common\",\n      requirements: [\n        {\n          name: \"number-input\",\n          type: \"greater-than\",\n          value: 0\n        },\n        {\n          name: \"condiments\",\n          type: \"grid-column-greater-than\",\n          column: 0,\n          value: 0\n        }\n      ]\n    },\n    {\n      name: \"Test 2\",\n      score: 15,\n      level: \"common\",\n      requirements: [\n        {\n          name: \"number-grid\",\n          type: \"grid-column-greater-than\",\n          column: 1,\n          value: 0\n        }\n      ]\n    },\n    {\n      name: \"Test 3\",\n      score: 25,\n      level: \"common\",\n      requirements: [\n        {\n          name: \"condiments\",\n          type: \"grid-column-greater-than\",\n          column: 1,\n          value: 0\n        }\n      ]\n    }\n  ],\n  pages: [\n    {\n      name: \"Page 1\",\n      backSymbol: \"eye\",\n      description: \"Ask about address\",\n      group: {\n        name:   \"Home address\",\n        border: true,\n        items: [\n          {\n            type: \"text\",\n            name: \"text input\",\n          },\n          {\n            type: \"number\",\n            scoreType: \"scale\",\n            scoreData: [\n              {upTo: 10, scale: 1},\n              {upTo: 20, scale: 0.5},\n              {upTo: 40, scale: 0.25},\n              {upTo:100, scale: 0.125}\n            ],\n            name: \"number-input\",\n          },\n          {\n            type: \"number-grid\",\n            scoreType: \"scale\",\n            scoreData: [\n              {upTo: 10, scale: 1},\n              {upTo: 20, scale: 0.5},\n              {upTo: 40, scale: 0.25},\n              {upTo:100, scale: 0.125}\n            ],\n            columns: [\n              {name: \"Inside\",  scale: 1},\n              {name: \"Outside\", scale: 1},\n            ],\n            rows: [\n              {name: \"Balls\",  scale: 1},\n              {name: \"Chairs\", scale: 2},\n              {name: \"Desks\",  scale: 3},\n              {name: \"Stools\", scale: 4},\n            ],\n            name: \"number-grid\",\n          },\n          {\n            type: \"select\",\n            options: [\n              {name: \"--choose-one--\", scoreData: 0},\n              {name: \"one\", scoreData: 1},\n              {name: \"two\", scoreData: 2},\n              {name: \"three\", scoreData: 3},\n              {name: \"three-3\", scoreData: 4},\n            ],\n            name: \"select-on-page-1\",\n          },\n          {\n            type: \"radio\",\n            options: [\n              {name: \"one-r\", scoreData: 0},\n              {name: \"two-r\", scoreData: 2},\n              {name: \"three-r\", scoreData: 4},\n            ],\n            name: \"radio-on-page-1\",\n          },\n          {\n            type: \"checkbox-grid\",\n            columns: [\n              {name: \"With Ketchup\", scoreData: 1},\n              {name: \"With Mustard\", scoreData: 2},\n              {name: \"With Relish\", scoreData: 3}\n            ],\n            rows: [\n              {name: \"Hamburger\", scoreData: 1},\n              {name: \"Hotdog\", scoreData: 2},\n              {name: \"Fries\", scoreData: 3},\n              {name: \"Ice Cream\", scoreData: 4},\n              {name: \"A big plate of well cooked sausages\", scoreData: 5}\n              ],\n            name: \"condiments\",\n          },\n          {\n            type: \"text\",\n            name: \"another text input\",\n          },\n\n        ]\n      }\n    },\n    {\n      name: \"Page 2\",\n      backSymbol: \"venus-mars\",\n      description: \"Other details\",\n      group: {\n        name:   \"Home address\",\n        border: false,\n        items: [\n          {\n            type: \"group\",\n            border: true,\n            name: \"Test group\",\n            items: [\n              {\n                type: \"select\",\n                options: [\n                  {name: \"cat\", scoreData: 1},\n                  {name: \"dog\", scoreData: 2},\n                  {name: \"horse\", scoreData: 3}\n                ],\n                name: \"animal\",\n              },\n              {\n                type: \"radio\",\n                options: [\n                  {name: \"pizza\", scoreData: 1},\n                  {name: \"hotdog\", scoreData: 2},\n                  {name: \"poutine\", scoreData: 3},\n                ],\n                name: \"food\",\n              },\n            ]\n          },\n          {\n            type: \"group\",\n            border: true,\n            name: \"Test group 2\",\n            items: [\n              {\n                type: \"text\",\n                name: \"text input\",\n              },\n              {\n                type: \"select\",\n                options: [\n                  {name: \"one\", scoreData: 1},\n                  {name: \"two\", scoreData: 2},\n                  {name: \"three\", scoreData: 3}\n                ],\n                name: \"select-on-page-2\",\n              },\n              {\n                type: \"radio\",\n                options: [\n                  {name: \"one-r\", scoreData: 1},\n                  {name: \"two-r\", scoreData: 1},\n                  {name: \"three-r\", scoreData: 1},\n                ],\n                name: \"radio-on-page-2\",\n              },\n              {\n                type: \"text\",\n                name: \"another text input\",\n              },\n            ]\n          }\n        ]\n      }\n    },\n    {\n      name: \"Lots of radios\",\n      backSymbol: \"heart-o\",\n      description: \"Other details\",\n      group: {\n        name:   \"Some information\",\n        border: true,\n        items: [\n          {\n            type: \"text\",\n            name: \"another text input\",\n          },\n\n        ]\n      }\n    },\n  ]\n\n};\n","import {inject, computedFrom} from 'aurelia-framework';\nimport {ScoreBoard} from \"../scoreboard\";\n\n@inject(ScoreBoard)\nexport class Achievements {\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n\n  @computedFrom('scoreboard.achievements')\n  get achievements() {\n    console.log(\"Achievements:\", this.scoreboard.achievements, this.scoreboard.survey.achievements);\n    if (!this.scoreboard.survey) {\n      return [];\n    }\n    return this.scoreboard.survey.achievements;\n  }\n\n  @computedFrom('scoreboard.achievements')\n  get achievementState() {\n    return this.scoreboard.achievements;\n  }\n\n  @computedFrom('scoreboard.numAchievements')\n  get numAchievements() {\n    return this.scoreboard.notifications;\n  }\n\n    @computedFrom('scoreboard.achievementNotifications')\n    get achievementNotifications() {\n        console.log(\"Getting achievements\");\n        return this.scoreboard.achievementNotifications;\n    }\n    \n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\n@inject(ScoreBoard)\nexport class SelectWidget {\n  score = 0;\n\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n  \n  activate(obj) {\n  }\n\n  set score(val) {\n    this.score = val;\n  }\n  \n}\n","export class Answer { \n  name    = \"\";\n  value   = null;\n  score   = null;\n\n  static fromObject(src) { \n    let obj = Object.assign(new Answer(), src);\n    obj.computeScore();\n    return obj;\n  } \n\n  // Compute the score using the value and scoring data\n  computeScore() {\n    if (!this.scoreType) {\n      this.score = this.value ? this.scoreData : 0;\n    }\n    else if (this.scoreType == \"scale\") {\n      let lastUpTo = 0;\n      let score = 0;\n      for (let entry of this.scoreData) {\n        let numToAdd;\n        if (this.value > entry.upTo) {\n          score += (entry.upTo - lastUpTo) * entry.scale;\n        }\n        else {\n          score += (this.value - lastUpTo) * entry.scale;\n          break;\n        }\n        lastUpTo = entry.upTo;\n        console.log(entry, score);\n      }\n      this.score = score;\n    }\n    \n  }\n\n} \n","import {Question} from './question';\n\nexport class Group { \n\n  static fromObject(src) { \n    const group = Object.assign(new Group(), src);\n    let tmpItems = group.items;\n    console.log(tmpItems);\n    group.items = [];\n    console.log(tmpItems);\n    for (let item of tmpItems) {\n      // We can have groups in groups\n      if (item.type === \"group\") {\n        group.items.push(Group.fromObject(item));\n      }\n      else {\n        console.log(\"Adding quest\", item);\n        group.items.push(Question.fromObject(item));\n      }\n    }\n    return group;\n  } \n\n  name   = \"\";\n  border = false;\n  items  = [];\n  \n} \n\n","import {Group} from './group';\n\nexport class Page { \n  constructor() {\n  } \n\n  static fromObject(src) { \n    const page = Object.assign(new Page(), src);\n    page.group = Group.fromObject(page.group);\n    return page;\n  } \n\n  name = \"\";\n  description = \"\";\n  group = {};\n  \n} \n\n","import {inject} from 'aurelia-framework';\n \nexport class Question { \n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n\n  static fromObject(src) { \n    let obj = Object.assign(new Question(), src);\n    obj.learnAnswer();\n    return obj;\n  } \n\n  learnAnswer() {\n    //this.answer = this.scoreboard.getAnswer(this.name);\n  }\n\n  answerQuestion(answer) {\n    this.answer = Answer.fromObject(answer);\n    this.scoreboard(this.answer);\n  }\n  \n} \n\n","import {Page} from './page';\n\nexport class Survey { \n  constructor() {\n  } \n\n  static fromObject(src) { \n    const survey = Object.assign(new Survey(), src);\n    survey.pages = survey.pages.map(Page.fromObject); \n    return survey;\n  } \n\n  name = \"\";\n  description = \"\";\n  pages = [];\n  \n} \n\n","export class CheckboxGrid {\n  question = {};\n  checkboxes = {};\n  \n  activate(obj) {\n    this.question = obj;\n\n    for (let row of obj.rows) {\n      let cb = {};\n      for (let col of obj.columns) {\n        let scoreData = 0;\n        if (row.scoreData) {\n          scoreData = row.scoreData;\n        }\n        if (col.scoreData) {\n          scoreData *= col.scoreData;\n        }\n        cb[col.name] = {\n          name:      `${obj.name}.${row.name}.${col.name}`,\n          scoreData: scoreData,\n          value:     false\n        };\n      }\n      this.checkboxes[row.name] = cb;\n    }\n\n  }\n\n};\n\n\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\n@inject(ScoreBoard, Element)\nexport class CheckboxWidget {\n  question = {};\n  @bindable value;\n\n  constructor(scoreboard, element) {\n    this.scoreboard = scoreboard;\n    this.element    = element;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n\n    this.scoreboard.answerQuestion({\n      value:      newVal,\n      name:       this.question.name,\n      scoreData:  this.question.scoreData,\n      scoreType:  this.question.scoreType\n    });\n    \n  }  \n\n  boxClick(checkbox) {\n    this.value = this.value ? false : true;\n  }\n  \n  attached() {\n    let self = this;\n    this.element.addEventListener('click', function(e) {\n      self.boxClick();\n    });\n  }\n\n  detached() {\n    let self = this;\n    this.element.removeEventListener('click', function(e) {\n      self.boxClick();\n    });\n  }\n  \n};\n\n\n","export class NumberGrid {\n  question = {};\n  numbers = {};\n  \n  activate(obj) {\n    this.question = obj;\n\n    for (let row of obj.rows) {\n      let num = {};\n      for (let col of obj.columns) {\n        let scale = 0;\n        if (row.scale) {\n          scale = row.scale;\n        }\n        if (col.scale) {\n          scale *= col.scale;\n        }\n\n        let scoreData = [];\n        for (let entry of obj.scoreData) {\n          let newEntry = Object.assign({}, entry);\n          newEntry.scale *= scale;\n          scoreData.push(newEntry);\n        }\n    \n        num[col.name] = {\n          name:  `${obj.name}.${row.name}.${col.name}`,\n          scoreType: obj.scoreType,\n          scoreData: scoreData,\n          value: 0\n        };\n      }\n      this.numbers[row.name] = num;\n    }\n\n  }\n\n};\n\n\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\nfunction isNavigationOrSelectionKey(e) {\n  if ([46, 8, 9, 27, 110, 190].indexOf(e.keyCode) !== -1 ||\n    ([65, 67, 86, 88].indexOf(e.keyCode) !== -1 && (e.ctrlKey === true || e.metaKey === true)) ||\n    (e.keyCode >= 35 && e.keyCode <= 40)) {\n     return true;\n  }\n  return false;\n}\n\nfunction keydown (e) {\n  if (isNavigationOrSelectionKey(e)) {\n    return;\n  }\n  if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n    e.preventDefault();\n  }\n}\n\n\n@inject(ScoreBoard, Element)\nexport class SelectWidget {\n  question = {};\n  @bindable value = 0;\n\n  constructor(scoreboard, element) {\n    this.scoreboard = scoreboard;\n    this.element    = element;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    this.scoreboard.answerQuestion({\n      name:      this.question.name,\n      value:     newVal,\n      scoreType: this.question.scoreType,\n      scoreData: this.question.scoreData\n    });\n  }\n\n  attached() {\n    this.element.addEventListener('keydown', keydown);\n  }\n\n  detached() {\n    this.element.removeEventListener('keydown', keydown);\n  }\n\n  addOne() {\n    this.value++;\n  }\n\n  subtractOne() {\n    if (this.value > 0 || this.question.allowNegative) {\n      this.value--;\n    }\n  }\n\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\n@inject(ScoreBoard, Element)\nexport class RadioWidget {\n  question = {};\n  @bindable value = -1;\n\n  constructor(scoreboard, element) {\n    this.scoreboard = scoreboard;\n    this.element    = element;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    let selected = this.question.options[newVal];\n    this.scoreboard.answerQuestion({\n      name:      this.question.name,\n      value:     newVal,\n      scoreType: selected.scoreType,\n      scoreData: selected.scoreData\n    });\n  }\n\n  radioClick(radioButton, index) {\n    this.value = index;\n  }\n\n  attached() {\n    let elements = this.element.getElementsByClassName(\"radio-button\");\n    for(let i = 0; i < elements.length; i++) {\n      let el = elements[i];\n      let self = this;\n      el.addEventListener('click', function(e) {\n        self.radioClick(el, i);\n      });\n    }\n  }\n\n  detached() {\n    let elements = this.element.getElementsByClassName(\"radio-button\");\n    for(let i = 0; i < elements.length; i++) {\n      let el = elements[i];\n      let self = this;\n      el.removeEventListener('click', function(e) {\n        self.radioClick(el, i);\n      });\n    }\n  }\n\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\n@inject(ScoreBoard)\nexport class SelectWidget {\n  question = {};\n  @bindable value = \"\";\n\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    if (newVal < 0) {\n      this.scoreboard.answerQuestion({\n        name:      this.question.name,\n        value:     newVal,\n        scoreType: undefined,\n        scoreData: 0\n      });\n    }\n    else {\n      let selected = this.question.options[newVal];\n      this.scoreboard.answerQuestion({\n        name:      this.question.name,\n        value:     newVal,\n        scoreType: selected.scoreType,\n        scoreData: selected.scoreData\n      });\n    }\n  }\n  \n}\n","export class TextWidget {\n  name    = \"\";\n  value   = \"\";\n  activate(obj) {\n    this.name    = obj.name;\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}