{"version":3,"sources":["app.js","data-manager.js","environment.js","footer.js","group-view.js","header.js","home.js","main.js","page-view.js","question-view.js","survey-data.js","header/achievements-view.js","header/score.js","models/achievement.js","models/answer.js","models/group.js","models/page.js","models/question.js","models/scoreboard.js","models/survey.js","question-widgets/checkbox-grid-widget.js","question-widgets/checkbox-widget.js","question-widgets/number-grid-widget.js","question-widgets/number-widget.js","question-widgets/radio-widget.js","question-widgets/select-widget.js","question-widgets/text-widget.js","resources/index.js","models/achievement-group.js"],"names":["App","placeholder","configureRouter","config","router","title","map","route","redirect","name","moduleId","mapUnknownRoutes","DataManager","httpClient","survey","configure","useStandardConfiguration","withBaseUrl","contactsUrl","decomposeAchievementRequirement","achievement","reqList","req","question","questionIndex","console","log","matches","type","match","column","rows","row","columns","push","value","achievementIndex","processSurvey","pages","page","processSurveyGroup","group","achievements","tempReq","requirements","items","item","getSurvey","Promise","resolve","reject","fromObject","debug","testing","Footer","message","age","submit","GroupView","activate","Header","scoreboard","totalScore","notifications","achievementNotifications","Home","dataManager","pageIdx","params","pageNum","then","getNext","getPrev","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","feature","developmentLogging","start","setRoot","QuestionView","description","score","rarity","backSymbol","border","scoreType","scoreData","upTo","scale","options","Achievements","rarityLevels","achievementByRarity","SelectWidget","obj","val","Achievement","src","Object","assign","Answer","computeScore","lastUpTo","entry","numToAdd","Group","tmpItems","Page","Question","learnAnswer","answerQuestion","answer","ScoreBoard","answers","numAchievements","ansObj","lastTotal","lastDelta","addScoreChangeNotification","checkAchievements","getAnswer","questionName","allReqsMet","requirement","met","doesPassAchievementRequirement","scoreDelta","addAchievementChangeNotification","amount","notification","toString","setTimeout","splice","Survey","organizeQuestions","organizeAchievements","processGroup","CheckboxGrid","checkboxes","cb","col","CheckboxWidget","Element","element","valueChanged","newVal","oldVal","boxClick","checkbox","attached","self","addEventListener","e","detached","removeEventListener","NumberGrid","numbers","num","newEntry","isNavigationOrSelectionKey","indexOf","keyCode","ctrlKey","metaKey","keydown","shiftKey","preventDefault","addOne","subtractOne","allowNegative","RadioWidget","selected","radioClick","radioButton","index","elements","getElementsByClassName","i","el","length","undefined","TextWidget","AchievementGroup","allAchievements","ach"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.placeholder = \"App placeholder\";\n  }\n  \n  configureRouter(config, router) {\n  \tthis.router = router;\n  \tconfig.title = \"Fun With Aurelia\";\n  \tconfig.map([\n      { route: '', redirect: 'home/page/1' },\n      { route: 'home', redirect: 'home/page/1' },\n      { route: 'home/page', redirect: 'home/page/1' },\n      { route: 'home/page/:pageNum', name: 'home', moduleId: 'home' },\n  \t]);\n    config.mapUnknownRoutes('not-found');\n  }\n}\n","import {inject} from 'aurelia-framework'; \nimport {HttpClient, json} from 'aurelia-fetch-client'; \nimport {Survey} from './models/survey'; \nimport environment from './environment'; \nimport surveyData from './survey-data'; \n \n@inject(HttpClient) \nexport class DataManager { \n\n  survey = null;\n  \n  constructor(httpClient) { \n    this.httpClient = httpClient.configure(config => { \n      config \n        .useStandardConfiguration() \n        .withBaseUrl(environment.contactsUrl); \n    }); \n  }\n\n  decomposeAchievementRequirement(achievement, reqList, req) {\n\n    let question = this.survey.questionIndex[req.name];\n\n    if (!question) {\n      console.log(\"Achievement requirement name error: \", req.name);\n      return;\n    }\n\n    let matches = req.type.match(/^grid-column-(.*)/);\n    if (matches) {\n      let column = req.column || 0;\n      let type = matches[1];\n      \n      for (let row of question.rows) {\n        let name = `${question.name}.${row.name}.${question.columns[column].name}`;\n        reqList.push({\n          name: name,\n          type: type,\n          value: req.value\n        });\n\n        if (!this.survey.achievementIndex[name]) {\n          this.survey.achievementIndex[name] = [];\n        }\n        this.survey.achievementIndex[name].push(achievement);\n        \n      }\n      \n    }\n    \n  }\n\n  processSurvey() {\n\n    // Make an efficient lookup to get to questions by name\n    this.survey.questionIndex = {};\n    for (let page of this.survey.pages) {\n      this.processSurveyGroup(page.group);\n    }\n    \n    // Make an efficient lookup table for achievements\n    this.survey.achievementIndex = {};\n    if (this.survey.achievements) {\n      for (let achievement of this.survey.achievements) {\n        let tempReq = achievement.requirements;\n        achievement.requirements = [];\n        for (let req of tempReq) {\n          if (!this.survey.achievementIndex[req.name]) {\n            this.survey.achievementIndex[req.name] = [];\n          }\n\n          // If this is a compound requirement type, decompose it\n          if (req.type.match(/^grid/)) {\n            this.decomposeAchievementRequirement(achievement, achievement.requirements, req);\n          }\n          else {\n            achievement.requirements.push(req);\n            this.survey.achievementIndex[req.name].push(achievement);\n          }\n        }\n      }\n    }\n    \n  }\n\n  processSurveyGroup(group) {\n\n    for (let item of group.items) {\n      if (item.type === \"group\") {\n        this.processSurveyGroup(item);\n      }\n      else {\n        this.survey.questionIndex[item.name] = item;\n      }\n    }\n\n  }\n \n  getSurvey() {\n    // Return a promise. It is possible that this would turn into\n    // an async request eventually\n    return new Promise(\n      (resolve, reject) => {\n        if (!this.survey) {\n          this.survey = Survey.fromObject(surveyData);\n          this.processSurvey();\n        }\n        resolve(this.survey); // success\n      });\n  }\n \n} \n","export default {\n  debug: true,\n  testing: true\n};\n","export class Footer {\n  constructor() {\n    this.message = \"This is the footer\";\n    this.name = \"\";\n    this.age  = \"\";\n  }\n\n  submit() {\n    console.log(\"Got:\", this.name, this.age);\n    this.name = \"It's me\";\n  }\n}\n","export class GroupView {\n\n  group = null;\n  \n  activate(group) {\n    this.group = group;\n  }\n  \n};\n","import {inject, computedFrom} from 'aurelia-framework';\nimport { ScoreBoard } from \"./models/scoreboard\";\n\n@inject(ScoreBoard)\nexport class Header {\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n    this.message = \"This is the header\";\n  }\n\n  @computedFrom('scoreboard.totalScore')\n  get score() {\n    return this.scoreboard.totalScore;\n  }\n\n  @computedFrom('scoreboard.notifications')\n  get scoreNotifications() {\n    return this.scoreboard.notifications;\n  }\n\n  @computedFrom('scoreboard.achievementNotifications')\n  get achievementNotifications() {\n    console.log(\"Getting achievements\");\n    return this.scoreboard.achievementNotifications;\n  }\n    \n}\n","import {inject} from 'aurelia-framework'; \nimport {DataManager} from './data-manager'; \nimport {Router} from 'aurelia-router'; \n\n@inject(DataManager, Router) \nexport class Home {\n\n  pageIdx = 0;\n  survey = null;\n  \n  constructor(dataManager, router) {\n    this.dataManager = dataManager;\n    this.router      = router;\n  }\n\n  activate(params) {\n    if (params.pageNum && params.pageNum > 1) {\n      this.pageIdx = params.pageNum - 1;\n    }\n    else {\n      this.pageIdx = 0;\n    }\n\n    return this.dataManager.getSurvey() \n      .then(survey => {\n        this.survey = survey;\n        console.log(\"Survey:\", survey);\n      });    \n  }\n\n  getNext() {\n    \n  }\n\n  getPrev() {\n\n  }\n  \n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-animator-css')\n    .plugin('aurelia-bootstrap')\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework'; \nimport {Page} from './models/page';\n\nexport class Home {\n\n  page = null;\n  \n  constructor() {\n  }\n\n  activate(page) {\n    console.log(\"Page:\", page);\n    this.page = page;\n  }\n  \n};\n","export class QuestionView {\n  question = null;\n  activate(question) {\n    this.question = question;\n  }\n};\n","\nexport default {\n  name: \"This is a test survey\",\n  description: \"Ask about this and that\",\n  achievements: [\n    {\n      name: \"Test 1a\",\n      score: 5,\n      rarity: \"common\",\n      requirements: [\n        {\n          name: \"number-input\",\n          type: \"greater-than\",\n          value: 0\n        },\n        {\n          name: \"condiments\",\n          type: \"grid-column-greater-than\",\n          column: 0,\n          value: 0\n        }\n      ]\n    },\n    {\n      name: \"Test 1b\",\n      score: 5,\n      rarity: \"common\",\n      requirements: [\n        {\n          name: \"number-input\",\n          type: \"greater-than\",\n          value: 0\n        },\n        {\n          name: \"condiments\",\n          type: \"grid-column-greater-than\",\n          column: 0,\n          value: 0\n        }\n      ]\n    },\n    {\n      name: \"Test 1c\",\n      score: 5,\n      rarity: \"common\",\n      requirements: [\n        {\n          name: \"number-input\",\n          type: \"greater-than\",\n          value: 0\n        },\n        {\n          name: \"condiments\",\n          type: \"grid-column-greater-than\",\n          column: 0,\n          value: 0\n        }\n      ]\n    },\n\n    // Rare\n    {\n      name: \"Test 2a\",\n      score: 15,\n      rarity: \"rare\",\n      requirements: [\n        {\n          name: \"number-grid\",\n          type: \"grid-column-greater-than\",\n          column: 1,\n          value: 0\n        }\n      ]\n    },\n    {\n      name: \"Test 2b\",\n      score: 15,\n      rarity: \"rare\",\n      requirements: [\n        {\n          name: \"number-grid\",\n          type: \"grid-column-greater-than\",\n          column: 1,\n          value: 0\n        }\n      ]\n    },\n\n    // Epic\n    {\n      name: \"Test 3\",\n      score: 25,\n      rarity: \"epic\",\n      requirements: [\n        {\n          name: \"condiments\",\n          type: \"grid-column-greater-than\",\n          column: 1,\n          value: 0\n        }\n      ]\n    },\n    {\n      name: \"Legendary\",\n      score: 25,\n      rarity: \"legendary\",\n      requirements: [\n        {\n          name: \"condiments\",\n          type: \"grid-column-greater-than\",\n          column: 2,\n          value: 0\n        }\n      ]\n    }\n  ],\n  pages: [\n    {\n      name: \"Page 1\",\n      backSymbol: \"eye\",\n      description: \"Ask about address\",\n      group: {\n        name:   \"Home address\",\n        border: true,\n        items: [\n          {\n            type: \"text\",\n            name: \"text input\",\n          },\n          {\n            type: \"number\",\n            scoreType: \"scale\",\n            scoreData: [\n              {upTo: 10, scale: 1},\n              {upTo: 20, scale: 0.5},\n              {upTo: 40, scale: 0.25},\n              {upTo:100, scale: 0.125}\n            ],\n            name: \"number-input\",\n          },\n          {\n            type: \"number-grid\",\n            scoreType: \"scale\",\n            scoreData: [\n              {upTo: 10, scale: 1},\n              {upTo: 20, scale: 0.5},\n              {upTo: 40, scale: 0.25},\n              {upTo:100, scale: 0.125}\n            ],\n            columns: [\n              {name: \"Inside\",  scale: 1},\n              {name: \"Outside\", scale: 1},\n            ],\n            rows: [\n              {name: \"Balls\",  scale: 1},\n              {name: \"Chairs\", scale: 2},\n              {name: \"Desks\",  scale: 3},\n              {name: \"Stools\", scale: 4},\n            ],\n            name: \"number-grid\",\n          },\n          {\n            type: \"select\",\n            options: [\n              {name: \"--choose-one--\", scoreData: 0},\n              {name: \"one\", scoreData: 1},\n              {name: \"two\", scoreData: 2},\n              {name: \"three\", scoreData: 3},\n              {name: \"three-3\", scoreData: 4},\n            ],\n            name: \"select-on-page-1\",\n          },\n          {\n            type: \"radio\",\n            options: [\n              {name: \"one-r\", scoreData: 0},\n              {name: \"two-r\", scoreData: 2},\n              {name: \"three-r\", scoreData: 4},\n            ],\n            name: \"radio-on-page-1\",\n          },\n          {\n            type: \"checkbox-grid\",\n            columns: [\n              {name: \"With Ketchup\", scoreData: 1},\n              {name: \"With Mustard\", scoreData: 2},\n              {name: \"With Relish\", scoreData: 3}\n            ],\n            rows: [\n              {name: \"Hamburger\", scoreData: 1},\n              {name: \"Hotdog\", scoreData: 2},\n              {name: \"Fries\", scoreData: 3},\n              {name: \"Ice Cream\", scoreData: 4},\n              {name: \"A big plate of well cooked sausages\", scoreData: 5}\n              ],\n            name: \"condiments\",\n          },\n          {\n            type: \"text\",\n            name: \"another text input\",\n          },\n\n        ]\n      }\n    },\n    {\n      name: \"Page 2\",\n      backSymbol: \"venus-mars\",\n      description: \"Other details\",\n      group: {\n        name:   \"Home address\",\n        border: false,\n        items: [\n          {\n            type: \"group\",\n            border: true,\n            name: \"Test group\",\n            items: [\n              {\n                type: \"select\",\n                options: [\n                  {name: \"cat\", scoreData: 1},\n                  {name: \"dog\", scoreData: 2},\n                  {name: \"horse\", scoreData: 3}\n                ],\n                name: \"animal\",\n              },\n              {\n                type: \"radio\",\n                options: [\n                  {name: \"pizza\", scoreData: 1},\n                  {name: \"hotdog\", scoreData: 2},\n                  {name: \"poutine\", scoreData: 3},\n                ],\n                name: \"food\",\n              },\n            ]\n          },\n          {\n            type: \"group\",\n            border: true,\n            name: \"Test group 2\",\n            items: [\n              {\n                type: \"text\",\n                name: \"text input\",\n              },\n              {\n                type: \"select\",\n                options: [\n                  {name: \"one\", scoreData: 1},\n                  {name: \"two\", scoreData: 2},\n                  {name: \"three\", scoreData: 3}\n                ],\n                name: \"select-on-page-2\",\n              },\n              {\n                type: \"radio\",\n                options: [\n                  {name: \"one-r\", scoreData: 1},\n                  {name: \"two-r\", scoreData: 1},\n                  {name: \"three-r\", scoreData: 1},\n                ],\n                name: \"radio-on-page-2\",\n              },\n              {\n                type: \"text\",\n                name: \"another text input\",\n              },\n            ]\n          }\n        ]\n      }\n    },\n    {\n      name: \"Lots of radios\",\n      backSymbol: \"heart-o\",\n      description: \"Other details\",\n      group: {\n        name:   \"Some information\",\n        border: true,\n        items: [\n          {\n            type: \"text\",\n            name: \"another text input\",\n          },\n\n        ]\n      }\n    },\n  ]\n\n};\n","import {inject, computedFrom} from 'aurelia-framework';\nimport {ScoreBoard} from \"../models/scoreboard\";\n\n@inject(ScoreBoard)\nexport class Achievements {\n  rarityLevels = ['common', 'rare', 'epic', 'legendary'];\n  \n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n\n  @computedFrom('scoreboard.achievements')\n  get achievements() {\n    console.log(\"Achievements:\", this.scoreboard.achievements, this.scoreboard.survey.achievements);\n    if (!this.scoreboard.survey) {\n      return [];\n    }\n    return this.scoreboard.survey.achievements;\n  }\n\n  @computedFrom('scoreboard.achievements')\n  get achievementByRarity() {\n    if (!this.scoreboard.survey) {\n      return [];\n    }\n    console.log(\"Achievements by rarity:\", this.scoreboard.survey.achievementByRarity);\n    return this.scoreboard.survey.achievementByRarity;\n  }\n\n  @computedFrom('scoreboard.achievements')\n  get achievementState() {\n    return this.scoreboard.achievements;\n  }\n\n  @computedFrom('scoreboard.numAchievements')\n  get numAchievements() {\n    return this.scoreboard.notifications;\n  }\n\n    @computedFrom('scoreboard.achievementNotifications')\n    get achievementNotifications() {\n        console.log(\"Getting achievements\");\n        return this.scoreboard.achievementNotifications;\n    }\n    \n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../models/scoreboard';\n\n@inject(ScoreBoard)\nexport class SelectWidget {\n  score = 0;\n\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n  \n  activate(obj) {\n  }\n\n  set score(val) {\n    this.score = val;\n  }\n  \n}\n","import {inject} from 'aurelia-framework';\n \nexport class Achievement { \n\n  static fromObject(src) { \n    let obj = Object.assign(new Achievement(), src);\n    return obj;\n  } \n\n\n  \n} \n","export class Answer { \n  name    = \"\";\n  value   = null;\n  score   = null;\n\n  static fromObject(src) { \n    let obj = Object.assign(new Answer(), src);\n    obj.computeScore();\n    return obj;\n  } \n\n  // Compute the score using the value and scoring data\n  computeScore() {\n    if (!this.scoreType) {\n      this.score = this.value ? this.scoreData : 0;\n    }\n    else if (this.scoreType == \"scale\") {\n      let lastUpTo = 0;\n      let score = 0;\n      for (let entry of this.scoreData) {\n        let numToAdd;\n        if (this.value > entry.upTo) {\n          score += (entry.upTo - lastUpTo) * entry.scale;\n        }\n        else {\n          score += (this.value - lastUpTo) * entry.scale;\n          break;\n        }\n        lastUpTo = entry.upTo;\n        console.log(entry, score);\n      }\n      this.score = score;\n    }\n    \n  }\n\n} \n","import {Question} from './question';\n\nexport class Group { \n\n  static fromObject(src) { \n    const group = Object.assign(new Group(), src);\n    let tmpItems = group.items;\n    console.log(tmpItems);\n    group.items = [];\n    console.log(\"temp items:\", tmpItems);\n    for (let item of tmpItems) {\n      // We can have groups in groups\n      if (item.type === \"group\") {\n        group.items.push(Group.fromObject(item));\n      }\n      else {\n        console.log(\"Adding quest\", item);\n        group.items.push(Question.fromObject(item));\n      }\n    }\n    return group;\n  } \n\n  name   = \"\";\n  border = false;\n  items  = [];\n  \n} \n\n","import {Group} from './group';\n\nexport class Page { \n  constructor() {\n  } \n\n  static fromObject(src) { \n    const page = Object.assign(new Page(), src);\n    page.group = Group.fromObject(page.group);\n    return page;\n  } \n\n  name = \"\";\n  description = \"\";\n  group = {};\n  \n} \n\n","import {inject} from 'aurelia-framework';\n \nexport class Question { \n  constructor() {\n  }\n\n  static fromObject(src) { \n    let obj = Object.assign(new Question(), src);\n    obj.learnAnswer();\n    return obj;\n  } \n\n  learnAnswer() {\n    //this.answer = this.scoreboard.getAnswer(this.name);\n  }\n\n  answerQuestion(answer) {\n    this.answer = Answer.fromObject(answer);\n    this.scoreboard(this.answer);\n  }\n  \n} \n\n","import {Answer} from \"./answer\";\nimport {inject} from 'aurelia-framework';\nimport {DataManager} from '../data-manager'; \n\n@inject(DataManager)\nexport class ScoreBoard {\n  answers = {};\n  achievements = {};\n  notifications = [];\n  achievementNotifications = [];\n  totalScore = 0;\n  numAchievements = 0;\n\n  constructor(dataManager) {\n    this.dataManager = dataManager;\n    this.dataManager.getSurvey()\n      .then(survey => {\n        this.survey = survey;\n      });    \n  }\n  \n  answerQuestion(answer) {\n    let ansObj    = Answer.fromObject(answer);\n    let lastTotal = this.totalScore;\n\n    // Remove the previous answer from the total score\n    if (this.answers[ansObj.name] &&\n        this.answers[ansObj.name].score) {\n      this.totalScore -= this.answers[ansObj.name].score;\n    }\n\n    // Add this answer to the total score\n    this.totalScore += ansObj.score;\n    this.answers[ansObj.name] = ansObj;\n\n    // If the score has changed, notify the user\n    let lastDelta = this.totalScore - lastTotal;\n    if (lastDelta != 0) {\n      this.addScoreChangeNotification(lastDelta);\n    }\n\n    this.checkAchievements(ansObj);\n    \n  }\n\n  getAnswer(questionName) {\n    return this.answers[questionName];\n  }\n\n  checkAchievements(answer) {\n\n    if (!this.survey) {\n      return;\n    }\n    \n    if (this.survey.achievementIndex[answer.name]) {\n\n      // This question feeds into at least one achievement\n      for (let achievement of this.survey.achievementIndex[answer.name]) {\n        let allReqsMet = true;\n        for (let requirement of achievement.requirements) {\n          if (answer.name === requirement.name) {\n            requirement.met = this.doesPassAchievementRequirement(answer, requirement);\n          }\n          if (!requirement.met) {\n            allReqsMet = false;\n          }\n        }\n\n        let scoreDelta = 0;\n        if (!this.achievements[achievement.name] && allReqsMet) {\n          // New achievement met\n          console.log(\"Got achievement: \", achievement.name);\n          scoreDelta = achievement.score;\n          this.addAchievementChangeNotification(achievement);\n          this.numAchievements++;\n        }\n        else if (this.achievements[achievement.name] && !allReqsMet) {\n          // Existing achievement lost\n          console.log(\"Lost achievement: \", achievement.name);\n          scoreDelta = -achievement.score;\n          this.numAchievements--;\n        }\n        this.achievements[achievement.name] = allReqsMet;\n\n        if (scoreDelta) {\n          this.totalScore += scoreDelta;\n          this.addScoreChangeNotification(scoreDelta);\n        }\n        \n      }\n      \n    }\n    \n  }\n\n  doesPassAchievementRequirement(answer, requirement) {\n    if (requirement.type === \"greater-than\"){\n      if (answer.score > requirement.value) {\n        return true;\n      }\n      return false;\n    }\n    else if (requirement.type === \"less-than\"){\n      if (answer.score < requirement.value) {\n        return true;\n      }\n      return false;\n    }\n    else if (requirement.type === \"equal\"){\n      if (answer.score === requirement.value) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }\n\n  addScoreChangeNotification(amount) {\n    let notification = amount < 0 ? amount.toString() : \"+\" + amount.toString();\n    this.notifications.push(notification);\n    setTimeout(() => { \n      this.notifications.splice(0, 1);\n    }, 2500);\n    console.log(this.notifications);\n  }\n  \n  addAchievementChangeNotification(achievement) {\n    let notification = `New achievement: ${achievement.name}`;\n    this.achievementNotifications.push(notification);\n    setTimeout(() => { \n      this.achievementNotifications.splice(0, 1);\n    }, 2500);\n    console.log(this.notifications);\n  }\n  \n  \n}\n","import {Page} from './page';\n\nexport class Survey { \n  constructor() {\n  } \n\n  static fromObject(src) { \n    const survey = Object.assign(new Survey(), src);\n    survey.pages = survey.pages.map(Page.fromObject); \n\n    survey.organizeQuestions();\n    survey.organizeAchievements();\n\n    return survey;\n  } \n\n\n  // Go through the group and record the questions\n  processGroup(group) {\n\n    for (let item of group.items) {\n      if (item.type === \"group\") {\n        this.processGroup(item);\n      }\n      else {\n        this.questionIndex[item.name] = item;\n      }\n    }\n\n  }\n\n  organizeQuestions() {\n    for (let page of this.pages) {\n      this.processGroup(page.group);\n    }\n  }\n\n  organizeAchievements() {\n    // Make an efficient lookup table for achievements\n    if (this.achievements) {\n      for (let achievement of this.achievements) {\n\n        // Decompose compound achievements and create an index by question\n        let tempReq = achievement.requirements;\n        achievement.requirements = [];\n        for (let req of tempReq) {\n          if (!this.achievementIndex[req.name]) {\n            this.achievementIndex[req.name] = [];\n          }\n\n          // If this is a compound requirement type, decompose it\n          if (req.type.match(/^grid/)) {\n            this.decomposeAchievementRequirement(achievement, achievement.requirements, req);\n          }\n          else {\n            achievement.requirements.push(req);\n            this.achievementIndex[req.name].push(achievement);\n          }\n        }\n\n        // Organize the achievements by rarity\n        if (!this.achievementByRarity[achievement.rarity]) {\n          this.achievementByRarity[achievement.rarity] = [];\n        }\n        this.achievementByRarity[achievement.rarity].push(achievement);\n\n      }\n    }\n  }\n\n\n  // Turn compound requirements into individual\n  decomposeAchievementRequirement(achievement, reqList, req) {\n\n    let question = this.questionIndex[req.name];\n\n    if (!question) {\n      console.log(\"Achievement requirement name error: \", req.name);\n      return;\n    }\n\n    let matches = req.type.match(/^grid-column-(.*)/);\n    if (matches) {\n      let column = req.column || 0;\n      let type = matches[1];\n      \n      for (let row of question.rows) {\n        let name = `${question.name}.${row.name}.${question.columns[column].name}`;\n        reqList.push({\n          name: name,\n          type: type,\n          value: req.value\n        });\n\n        if (!this.achievementIndex[name]) {\n          this.achievementIndex[name] = [];\n        }\n        this.achievementIndex[name].push(achievement);\n        \n      }\n    }\n  }\n\n\n  name = \"\";\n  description = \"\";\n  pages = [];\n  questionIndex = [];\n  achievementIndex = [];\n  achievementByRarity = {};\n  \n} \n\n","export class CheckboxGrid {\n  question = {};\n  checkboxes = {};\n  \n  activate(obj) {\n    this.question = obj;\n\n    for (let row of obj.rows) {\n      let cb = {};\n      for (let col of obj.columns) {\n        let scoreData = 0;\n        if (row.scoreData) {\n          scoreData = row.scoreData;\n        }\n        if (col.scoreData) {\n          scoreData *= col.scoreData;\n        }\n        cb[col.name] = {\n          name:      `${obj.name}.${row.name}.${col.name}`,\n          scoreData: scoreData,\n          value:     false\n        };\n      }\n      this.checkboxes[row.name] = cb;\n    }\n\n  }\n\n};\n\n\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../models/scoreboard';\n\n@inject(ScoreBoard, Element)\nexport class CheckboxWidget {\n  question = {};\n  @bindable value;\n\n  constructor(scoreboard, element) {\n    this.scoreboard = scoreboard;\n    this.element    = element;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n\n    this.scoreboard.answerQuestion({\n      value:      newVal,\n      name:       this.question.name,\n      scoreData:  this.question.scoreData,\n      scoreType:  this.question.scoreType\n    });\n    \n  }  \n\n  boxClick(checkbox) {\n    this.value = this.value ? false : true;\n  }\n  \n  attached() {\n    let self = this;\n    this.element.addEventListener('click', function(e) {\n      self.boxClick();\n    });\n  }\n\n  detached() {\n    let self = this;\n    this.element.removeEventListener('click', function(e) {\n      self.boxClick();\n    });\n  }\n  \n};\n\n\n","export class NumberGrid {\n  question = {};\n  numbers = {};\n  \n  activate(obj) {\n    this.question = obj;\n\n    for (let row of obj.rows) {\n      let num = {};\n      for (let col of obj.columns) {\n        let scale = 0;\n        if (row.scale) {\n          scale = row.scale;\n        }\n        if (col.scale) {\n          scale *= col.scale;\n        }\n\n        let scoreData = [];\n        for (let entry of obj.scoreData) {\n          let newEntry = Object.assign({}, entry);\n          newEntry.scale *= scale;\n          scoreData.push(newEntry);\n        }\n    \n        num[col.name] = {\n          name:  `${obj.name}.${row.name}.${col.name}`,\n          scoreType: obj.scoreType,\n          scoreData: scoreData,\n          value: 0\n        };\n      }\n      this.numbers[row.name] = num;\n    }\n\n  }\n\n};\n\n\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../models/scoreboard';\n\nfunction isNavigationOrSelectionKey(e) {\n  if ([46, 8, 9, 27, 110, 190].indexOf(e.keyCode) !== -1 ||\n    ([65, 67, 86, 88].indexOf(e.keyCode) !== -1 && (e.ctrlKey === true || e.metaKey === true)) ||\n    (e.keyCode >= 35 && e.keyCode <= 40)) {\n     return true;\n  }\n  return false;\n}\n\nfunction keydown (e) {\n  if (isNavigationOrSelectionKey(e)) {\n    return;\n  }\n  if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n    e.preventDefault();\n  }\n}\n\n\n@inject(ScoreBoard, Element)\nexport class SelectWidget {\n  question = {};\n  @bindable value = 0;\n\n  constructor(scoreboard, element) {\n    this.scoreboard = scoreboard;\n    this.element    = element;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    this.scoreboard.answerQuestion({\n      name:      this.question.name,\n      value:     newVal,\n      scoreType: this.question.scoreType,\n      scoreData: this.question.scoreData\n    });\n  }\n\n  attached() {\n    this.element.addEventListener('keydown', keydown);\n  }\n\n  detached() {\n    this.element.removeEventListener('keydown', keydown);\n  }\n\n  addOne() {\n    this.value++;\n  }\n\n  subtractOne() {\n    if (this.value > 0 || this.question.allowNegative) {\n      this.value--;\n    }\n  }\n\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../models/scoreboard';\n\n@inject(ScoreBoard, Element)\nexport class RadioWidget {\n  question = {};\n  @bindable value = -1;\n\n  constructor(scoreboard, element) {\n    this.scoreboard = scoreboard;\n    this.element    = element;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    let selected = this.question.options[newVal];\n    this.scoreboard.answerQuestion({\n      name:      this.question.name,\n      value:     newVal,\n      scoreType: selected.scoreType,\n      scoreData: selected.scoreData\n    });\n  }\n\n  radioClick(radioButton, index) {\n    this.value = index;\n  }\n\n  attached() {\n    let elements = this.element.getElementsByClassName(\"radio-button\");\n    for(let i = 0; i < elements.length; i++) {\n      let el = elements[i];\n      let self = this;\n      el.addEventListener('click', function(e) {\n        self.radioClick(el, i);\n      });\n    }\n  }\n\n  detached() {\n    let elements = this.element.getElementsByClassName(\"radio-button\");\n    for(let i = 0; i < elements.length; i++) {\n      let el = elements[i];\n      let self = this;\n      el.removeEventListener('click', function(e) {\n        self.radioClick(el, i);\n      });\n    }\n  }\n\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../models/scoreboard';\n\n@inject(ScoreBoard)\nexport class SelectWidget {\n  question = {};\n  @bindable value = \"\";\n\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    if (newVal < 0) {\n      this.scoreboard.answerQuestion({\n        name:      this.question.name,\n        value:     newVal,\n        scoreType: undefined,\n        scoreData: 0\n      });\n    }\n    else {\n      let selected = this.question.options[newVal];\n      this.scoreboard.answerQuestion({\n        name:      this.question.name,\n        value:     newVal,\n        scoreType: selected.scoreType,\n        scoreData: selected.scoreData\n      });\n    }\n  }\n  \n}\n","export class TextWidget {\n  name    = \"\";\n  value   = \"\";\n  activate(obj) {\n    this.name    = obj.name;\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {Achievement} from './achievement';\n\nexport class AchievementGroup { \n  constructor(rarity) {\n    this.rarity = rarity;\n  } \n\n  static fromObject(rarity, allAchievements) { \n    let self = new AchievementGroup();\n    \n    for (let ach of allAchievements) {\n      if (ach.rarity === this.rarity) {\n        this.achievements.push(Achievement.fromObject(ach));\n      }\n    }\n    \n    return self;\n  } \n\n  rarity = \"\";\n  achievements = [];\n  \n} \n"],"sourceRoot":"../src"}