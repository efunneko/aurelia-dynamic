{"version":3,"sources":["app.js","data-manager.js","environment.js","footer.js","group-view.js","header.js","home.js","main.js","page-view.js","question-view.js","scoreboard.js","survey-data.js","header/score.js","models/answer.js","models/group.js","models/page.js","models/question.js","models/survey.js","question-widgets/checkbox-grid-widget.js","question-widgets/checkbox-widget.js","question-widgets/number-widget.js","question-widgets/radio-widget.js","question-widgets/select-widget.js","question-widgets/text-widget.js","resources/index.js","question-widgets/number-grid-widget.js"],"names":["App","placeholder","configureRouter","config","router","title","map","route","redirect","name","moduleId","mapUnknownRoutes","DataManager","httpClient","survey","configure","useStandardConfiguration","withBaseUrl","contactsUrl","getSurvey","Promise","resolve","reject","fromObject","debug","testing","Footer","message","age","submit","console","log","GroupView","group","activate","Header","scoreboard","totalScore","notifications","Home","dataManager","pageIdx","params","pageNum","then","getNext","getPrev","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","bridge","useAll","feature","developmentLogging","start","setRoot","page","QuestionView","question","ScoreBoard","answers","answerQuestion","answer","ansObj","lastTotal","score","lastDelta","addScoreChangeNotification","getAnswer","questionName","amount","notification","toString","push","setTimeout","splice","description","pages","border","items","type","scoreType","scoreData","upTo","scale","columns","rows","options","SelectWidget","obj","val","Answer","value","src","Object","assign","computeScore","lastUpTo","entry","numToAdd","Group","tmpItems","item","Page","Question","learnAnswer","Survey","CheckboxGrid","checkboxes","row","cb","col","CheckboxWidget","valueChanged","newVal","oldVal","isNavigationOrSelectionKey","e","indexOf","keyCode","ctrlKey","metaKey","keydown","shiftKey","preventDefault","Element","element","attached","addEventListener","detached","removeEventListener","addOne","subtractOne","allowNegative","RadioWidget","selected","undefined","TextWidget","NumberGrid","numbers","num","newEntry"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.placeholder = \"App placeholder\";\n  }\n  \n  configureRouter(config, router) {\n  \tthis.router = router;\n  \tconfig.title = \"Fun With Aurelia\";\n  \tconfig.map([\n      { route: '', redirect: 'home/page/1' },\n      { route: 'home', redirect: 'home/page/1' },\n      { route: 'home/page', redirect: 'home/page/1' },\n      { route: 'home/page/:pageNum', name: 'home', moduleId: 'home' },\n  \t]);\n    config.mapUnknownRoutes('not-found');\n  }\n}\n","import {inject} from 'aurelia-framework'; \nimport {HttpClient, json} from 'aurelia-fetch-client'; \nimport {Survey} from './models/survey'; \nimport environment from './environment'; \nimport surveyData from './survey-data'; \n \n@inject(HttpClient) \nexport class DataManager { \n\n  survey = null;\n  \n  constructor(httpClient) { \n    this.httpClient = httpClient.configure(config => { \n      config \n        .useStandardConfiguration() \n        .withBaseUrl(environment.contactsUrl); \n    }); \n  } \n \n  getSurvey() {\n    // Return a promise. It is possible that this would turn into\n    // an async request eventually\n    return new Promise(\n      (resolve, reject) => {\n        if (!this.survey) {\n          this.survey = Survey.fromObject(surveyData);\n        }\n        resolve(this.survey); // success\n      });\n  }\n \n} \n","export default {\n  debug: true,\n  testing: true\n};\n","export class Footer {\n  constructor() {\n    this.message = \"This is the footer\";\n    this.name = \"\";\n    this.age  = \"\";\n  }\n\n  submit() {\n    console.log(\"Got:\", this.name, this.age);\n    this.name = \"It's me\";\n  }\n}\n","export class GroupView {\n\n  group = null;\n  \n  activate(group) {\n    this.group = group;\n  }\n  \n};\n","import {inject, computedFrom} from 'aurelia-framework';\nimport { ScoreBoard } from \"./scoreboard\";\n\n@inject(ScoreBoard)\nexport class Header {\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n    this.message = \"This is the header\";\n  }\n\n  @computedFrom('scoreboard.totalScore')\n  get score() {\n    return this.scoreboard.totalScore;\n  }\n\n  @computedFrom('scoreboard.notifications')\n  get scoreNotifications() {\n    return this.scoreboard.notifications;\n  }\n\n}\n","import {inject} from 'aurelia-framework'; \nimport {DataManager} from './data-manager'; \nimport {Router} from 'aurelia-router'; \n\n@inject(DataManager, Router) \nexport class Home {\n\n  pageIdx = 0;\n  survey = null;\n  \n  constructor(dataManager, router) {\n    this.dataManager = dataManager;\n    this.router      = router;\n  }\n\n  activate(params) {\n    if (params.pageNum && params.pageNum > 1) {\n      this.pageIdx = params.pageNum - 1;\n    }\n    else {\n      this.pageIdx = 0;\n    }\n\n    return this.dataManager.getSurvey() \n      .then(survey => {\n        this.survey = survey;\n        console.log(\"Survey:\", survey);\n      });    \n  }\n\n  getNext() {\n    \n  }\n\n  getPrev() {\n\n  }\n  \n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-materialize-bridge',\n            bridge => bridge.useAll())\n    .plugin('aurelia-animator-css')\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework'; \nimport {Page} from './models/page';\n\nexport class Home {\n\n  page = null;\n  \n  constructor() {\n  }\n\n  activate(page) {\n    console.log(\"Page:\", page);\n    this.page = page;\n  }\n  \n};\n","export class QuestionView {\n  question = null;\n  activate(question) {\n    this.question = question;\n  }\n};\n","import {Answer} from \"./models/answer\";\nimport {inject} from 'aurelia-framework';\nexport class ScoreBoard {\n  answers = {};\n  notifications = [];\n  totalScore = 0;\n\n  constructor() {\n    console.log(\"New scoreboard\");\n  }\n  \n  answerQuestion(answer) {\n    let ansObj    = Answer.fromObject(answer);\n    let lastTotal = this.totalScore;\n\n    // Remove the previous answer from the total score\n    if (this.answers[ansObj.name] &&\n        this.answers[ansObj.name].score) {\n      this.totalScore -= this.answers[ansObj.name].score;\n    }\n\n    // Add this answer to the total score\n    this.totalScore += ansObj.score;\n    this.answers[ansObj.name] = ansObj;\n\n    // If the score has changed, notify the user\n    let lastDelta = this.totalScore - lastTotal;\n    if (lastDelta != 0) {\n      this.addScoreChangeNotification(lastDelta);\n    }\n    \n  }\n\n  getAnswer(questionName) {\n    return this.answers[questionName];\n  }\n\n  addScoreChangeNotification(amount) {\n    let notification = amount < 0 ? amount.toString() : \"+\" + amount.toString();\n    this.notifications.push(notification);\n    setTimeout(() => { \n      this.notifications.splice(0, 1);\n    }, 2500);\n    console.log(this.notifications);\n  }\n  \n  \n}\n","\nexport default {\n  name: \"This is a test survey\",\n  description: \"Ask about this and that\",\n  pages: [\n    {\n      name: \"Page 1\",\n      description: \"Ask about address\",\n      group: {\n        name:   \"Home address\",\n        border: true,\n        items: [\n          {\n            type: \"text\",\n            name: \"text input\",\n          },\n          {\n            type: \"number\",\n            scoreType: \"scale\",\n            scoreData: [\n              {upTo: 10, scale: 1},\n              {upTo: 20, scale: 0.5},\n              {upTo: 40, scale: 0.25},\n              {upTo:100, scale: 0.125}\n            ],\n            name: \"number-input\",\n          },\n          {\n            type: \"number-grid\",\n            scoreType: \"scale\",\n            scoreData: [\n              {upTo: 10, scale: 1},\n              {upTo: 20, scale: 0.5},\n              {upTo: 40, scale: 0.25},\n              {upTo:100, scale: 0.125}\n            ],\n            columns: [\n              {name: \"Inside\",  scale: 1},\n              {name: \"Outside\", scale: 1},\n            ],\n            rows: [\n              {name: \"Balls\",  scale: 1},\n              {name: \"Chairs\", scale: 2},\n              {name: \"Desks\",  scale: 3},\n              {name: \"Stools\", scale: 4},\n            ],\n            name: \"number-grid\",\n          },\n          {\n            type: \"select\",\n            options: [\n              {name: \"--choose-one--\", scoreData: 0},\n              {name: \"one\", scoreData: 1},\n              {name: \"two\", scoreData: 2},\n              {name: \"three\", scoreData: 3},\n              {name: \"three-3\", scoreData: 4},\n            ],\n            name: \"select-on-page-1\",\n          },\n          {\n            type: \"radio\",\n            options: [\n              {name: \"one-r\", scoreData: 0},\n              {name: \"two-r\", scoreData: 2},\n              {name: \"three-r\", scoreData: 4},\n            ],\n            name: \"radio-on-page-1\",\n          },\n          {\n            type: \"checkbox-grid\",\n            columns: [\n              {name: \"With Ketchup\", scoreData: 1},\n              {name: \"With Mustard\", scoreData: 2},\n              {name: \"With Relish\", scoreData: 3}\n            ],\n            rows: [\n              {name: \"Hamburger\", scoreData: 1},\n              {name: \"Hotdog\", scoreData: 2},\n              {name: \"Fries\", scoreData: 3},\n              {name: \"Ice Cream\", scoreData: 4},\n              {name: \"A big plate of well cooked sausages\", scoreData: 5}\n              ],\n            name: \"condiments\",\n          },\n          {\n            type: \"text\",\n            name: \"another text input\",\n          },\n\n        ]\n      }\n    },\n    {\n      name: \"Page 2\",\n      description: \"Other details\",\n      group: {\n        name:   \"Home address\",\n        border: false,\n        items: [\n          {\n            type: \"group\",\n            border: true,\n            name: \"Test group\",\n            items: [\n              {\n                type: \"select\",\n                options: [\n                  {name: \"cat\", scoreData: 1},\n                  {name: \"dog\", scoreData: 2},\n                  {name: \"horse\", scoreData: 3}\n                ],\n                name: \"animal\",\n              },\n              {\n                type: \"radio\",\n                options: [\n                  {name: \"pizza\", scoreData: 1},\n                  {name: \"hotdog\", scoreData: 2},\n                  {name: \"poutine\", scoreData: 3},\n                ],\n                name: \"food\",\n              },\n            ]\n          },\n          {\n            type: \"group\",\n            border: true,\n            name: \"Test group 2\",\n            items: [\n              {\n                type: \"text\",\n                name: \"text input\",\n              },\n              {\n                type: \"select\",\n                options: [\n                  {name: \"one\", scoreData: 1},\n                  {name: \"two\", scoreData: 2},\n                  {name: \"three\", scoreData: 3}\n                ],\n                name: \"select-on-page-2\",\n              },\n              {\n                type: \"radio\",\n                options: [\n                  {name: \"one-r\", scoreData: 1},\n                  {name: \"two-r\", scoreData: 1},\n                  {name: \"three-r\", scoreData: 1},\n                ],\n                name: \"radio-on-page-2\",\n              },\n              {\n                type: \"text\",\n                name: \"another text input\",\n              },\n            ]\n          }\n        ]\n      }\n    },\n    {\n      name: \"Lots of radios\",\n      description: \"Other details\",\n      group: {\n        name:   \"Some information\",\n        border: true,\n        items: [\n          {\n            type: \"text\",\n            name: \"another text input\",\n          },\n\n        ]\n      }\n    },\n  ]\n\n};\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\n@inject(ScoreBoard)\nexport class SelectWidget {\n  score = 0;\n\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n  \n  activate(obj) {\n  }\n\n  set score(val) {\n    this.score = val;\n  }\n  \n}\n","export class Answer { \n  name    = \"\";\n  value   = null;\n  score   = null;\n\n  static fromObject(src) { \n    let obj = Object.assign(new Answer(), src);\n    obj.computeScore();\n    return obj;\n  } \n\n  // Compute the score using the value and scoring data\n  computeScore() {\n    if (!this.scoreType) {\n      this.score = this.value ? this.scoreData : 0;\n    }\n    else if (this.scoreType == \"scale\") {\n      let lastUpTo = 0;\n      let score = 0;\n      for (let entry of this.scoreData) {\n        let numToAdd;\n        if (this.value > entry.upTo) {\n          score += (entry.upTo - lastUpTo) * entry.scale;\n        }\n        else {\n          score += (this.value - lastUpTo) * entry.scale;\n          break;\n        }\n        lastUpTo = entry.upTo;\n        console.log(entry, score);\n      }\n      this.score = score;\n    }\n    \n  }\n\n} \n","import {Question} from './question';\n\nexport class Group { \n\n  static fromObject(src) { \n    const group = Object.assign(new Group(), src);\n    let tmpItems = group.items;\n    console.log(tmpItems);\n    group.items = [];\n    console.log(tmpItems);\n    for (let item of tmpItems) {\n      // We can have groups in groups\n      if (item.type === \"group\") {\n        group.items.push(Group.fromObject(item));\n      }\n      else {\n        console.log(\"Adding quest\", item);\n        group.items.push(Question.fromObject(item));\n      }\n    }\n    return group;\n  } \n\n  name   = \"\";\n  border = false;\n  items  = [];\n  \n} \n\n","import {Group} from './group';\n\nexport class Page { \n  constructor() {\n  } \n\n  static fromObject(src) { \n    const page = Object.assign(new Page(), src);\n    page.group = Group.fromObject(page.group);\n    return page;\n  } \n\n  name = \"\";\n  description = \"\";\n  group = {};\n  \n} \n\n","import {inject} from 'aurelia-framework';\n \nexport class Question { \n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n\n  static fromObject(src) { \n    let obj = Object.assign(new Question(), src);\n    obj.learnAnswer();\n    return obj;\n  } \n\n  learnAnswer() {\n    //this.answer = this.scoreboard.getAnswer(this.name);\n  }\n\n  answerQuestion(answer) {\n    this.answer = Answer.fromObject(answer);\n    this.scoreboard(this.answer);\n  }\n  \n} \n\n","import {Page} from './page';\n\nexport class Survey { \n  constructor() {\n  } \n\n  static fromObject(src) { \n    const survey = Object.assign(new Survey(), src);\n    survey.pages = survey.pages.map(Page.fromObject); \n    return survey;\n  } \n\n  name = \"\";\n  description = \"\";\n  pages = [];\n  \n} \n\n","export class CheckboxGrid {\n  question = {};\n  checkboxes = {};\n  \n  activate(obj) {\n    this.question = obj;\n\n    for (let row of obj.rows) {\n      let cb = {};\n      for (let col of obj.columns) {\n        let scoreData = 0;\n        if (row.scoreData) {\n          scoreData = row.scoreData;\n        }\n        if (col.scoreData) {\n          scoreData *= col.scoreData;\n        }\n        cb[col.name] = {\n          name:      `${obj.name}.${row.name}.${col.name}`,\n          scoreData: scoreData,\n          value:     false\n        };\n      }\n      this.checkboxes[row.name] = cb;\n    }\n\n  }\n\n};\n\n\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\n@inject(ScoreBoard)\nexport class CheckboxWidget {\n  question = {};\n  @bindable value = false;\n\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n\n    this.scoreboard.answerQuestion({\n      value:      newVal,\n      name:       this.question.name,\n      scoreData:  this.question.scoreData,\n      scoreType:  this.question.scoreType\n    });\n    \n  }\n\n};\n\n\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\nfunction isNavigationOrSelectionKey(e) {\n  if ([46, 8, 9, 27, 110, 190].indexOf(e.keyCode) !== -1 ||\n    ([65, 67, 86, 88].indexOf(e.keyCode) !== -1 && (e.ctrlKey === true || e.metaKey === true)) ||\n    (e.keyCode >= 35 && e.keyCode <= 40)) {\n     return true;\n  }\n  return false;\n}\n\nfunction keydown (e) {\n  if (isNavigationOrSelectionKey(e)) {\n    return;\n  }\n  if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n    e.preventDefault();\n  }\n}\n\n\n@inject(ScoreBoard, Element)\nexport class SelectWidget {\n  question = {};\n  @bindable value = 0;\n\n  constructor(scoreboard, element) {\n    this.scoreboard = scoreboard;\n    this.element    = element;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    this.scoreboard.answerQuestion({\n      name:      this.question.name,\n      value:     newVal,\n      scoreType: this.question.scoreType,\n      scoreData: this.question.scoreData\n    });\n  }\n\n  attached() {\n    this.element.addEventListener('keydown', keydown);\n  }\n\n  detached() {\n    this.element.removeEventListener('keydown', keydown);\n  }\n\n  addOne() {\n    this.value++;\n  }\n\n  subtractOne() {\n    if (this.value > 0 || this.question.allowNegative) {\n      this.value--;\n    }\n  }\n\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\n@inject(ScoreBoard)\nexport class RadioWidget {\n  question = {};\n  @bindable value = \"\";\n\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    let selected = this.question.options[newVal];\n    this.scoreboard.answerQuestion({\n      name:      this.question.name,\n      value:     newVal,\n      scoreType: selected.scoreType,\n      scoreData: selected.scoreData\n    });\n  }\n}\n","import {inject, bindable} from 'aurelia-framework';\nimport {ScoreBoard} from '../scoreboard';\n\n@inject(ScoreBoard)\nexport class SelectWidget {\n  question = {};\n  @bindable value = \"\";\n\n  constructor(scoreboard) {\n    this.scoreboard = scoreboard;\n  }\n  \n  activate(obj) {\n    this.question = obj;\n    let answer = this.scoreboard.getAnswer(this.question.name);\n    if (answer) {\n      this.value = answer.value;\n    }\n  }\n\n  valueChanged(newVal, oldVal) {\n    if (newVal < 0) {\n      this.scoreboard.answerQuestion({\n        name:      this.question.name,\n        value:     newVal,\n        scoreType: undefined,\n        scoreData: 0\n      });\n    }\n    else {\n      let selected = this.question.options[newVal];\n      this.scoreboard.answerQuestion({\n        name:      this.question.name,\n        value:     newVal,\n        scoreType: selected.scoreType,\n        scoreData: selected.scoreData\n      });\n    }\n  }\n  \n}\n","export class TextWidget {\n  name    = \"\";\n  value   = \"\";\n  activate(obj) {\n    this.name    = obj.name;\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class NumberGrid {\n  question = {};\n  numbers = {};\n  \n  activate(obj) {\n    this.question = obj;\n\n    for (let row of obj.rows) {\n      let num = {};\n      for (let col of obj.columns) {\n        let scale = 0;\n        if (row.scale) {\n          scale = row.scale;\n        }\n        if (col.scale) {\n          scale *= col.scale;\n        }\n\n        let scoreData = [];\n        for (let entry of obj.scoreData) {\n          let newEntry = Object.assign({}, entry);\n          newEntry.scale *= scale;\n          scoreData.push(newEntry);\n        }\n    \n        num[col.name] = {\n          name:  `${obj.name}.${row.name}.${col.name}`,\n          scoreType: obj.scoreType,\n          scoreData: scoreData,\n          value: 0\n        };\n      }\n      this.numbers[row.name] = num;\n    }\n\n  }\n\n};\n\n\n"],"sourceRoot":"../src"}